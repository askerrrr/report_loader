var { it, describe } = require("node:test");
var getDateToByDateFrom = require("../../src/dateUtils");

describe("test func getDateToByDateFrom()", () => {
  it("getDateToByDateFrom(2024-01-29)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2024-01-29"), "2024-02-04"));
  it("getDateToByDateFrom(2025-01-06)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2025-01-06"), "2025-01-12"));
  it("getDateToByDateFrom(2025-01-13)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2025-01-13"), "2025-01-19"));
  it("getDateToByDateFrom(2025-01-20)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2025-01-20"), "2025-01-26"));
  it("getDateToByDateFrom(2025-01-27)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2025-01-27"), "2025-02-02"));
  it("getDateToByDateFrom(2026-01-05)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2026-01-05"), "2026-01-11"));
  it("getDateToByDateFrom(2026-01-12)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2026-01-12"), "2026-01-18"));
  it("getDateToByDateFrom(2026-01-19)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2026-01-19"), "2026-01-25"));
  it("getDateToByDateFrom(2026-01-26)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2026-01-26"), "2026-02-01"));
  it("getDateToByDateFrom(2027-01-04)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2027-01-04"), "2027-01-10"));
  it("getDateToByDateFrom(2027-01-11)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2027-01-11"), "2027-01-17"));
  it("getDateToByDateFrom(2027-01-18)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2027-01-18"), "2027-01-24"));
  it("getDateToByDateFrom(2027-01-25)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2027-01-25"), "2027-01-31"));
  it("getDateToByDateFrom(2028-01-03)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2028-01-03"), "2028-01-09"));
  it("getDateToByDateFrom(2028-01-10)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2028-01-10"), "2028-01-16"));
  it("getDateToByDateFrom(2028-01-17)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2028-01-17"), "2028-01-23"));
  it("getDateToByDateFrom(2028-01-24)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2028-01-24"), "2028-01-30"));
  it("getDateToByDateFrom(2028-01-31)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2028-01-31"), "2028-02-06"));
  it("getDateToByDateFrom(2029-01-01)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2029-01-01"), "2029-01-14"));
  it("getDateToByDateFrom(2029-01-08)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2029-01-08"), "2029-01-21"));
  it("getDateToByDateFrom(2029-01-15)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2029-01-15"), "2029-01-28"));
  it("getDateToByDateFrom(2029-01-22)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2029-01-22"), "2029-01-28"));
  it("getDateToByDateFrom(2029-01-29)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2029-01-29"), "2029-02-04"));
  it("getDateToByDateFrom(2030-01-07)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2030-01-07"), "2030-01-13"));
  it("getDateToByDateFrom(2030-01-14)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2030-01-14"), "2030-01-20"));
  it("getDateToByDateFrom(2030-01-21)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2030-01-21"), "2030-01-27"));
  it("getDateToByDateFrom(2030-01-28)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2030-01-28"), "2030-02-03"));
  it("getDateToByDateFrom(2031-01-06)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2031-01-06"), "2031-01-12"));
  it("getDateToByDateFrom(2031-01-13)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2031-01-13"), "2031-01-19"));
  it("getDateToByDateFrom(2031-01-20)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2031-01-20"), "2031-01-26"));
  it("getDateToByDateFrom(2031-01-27)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2031-01-27"), "2031-02-02"));
  it("getDateToByDateFrom(2032-01-05)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2032-01-05"), "2032-01-11"));
  it("getDateToByDateFrom(2032-01-12)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2032-01-12"), "2032-01-18"));
  it("getDateToByDateFrom(2032-01-19)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2032-01-19"), "2032-01-25"));
  it("getDateToByDateFrom(2032-01-26)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2032-01-26"), "2032-02-01"));
  it("getDateToByDateFrom(2033-01-03)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2033-01-03"), "2033-01-09"));
  it("getDateToByDateFrom(2033-01-10)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2033-01-10"), "2033-01-16"));
  it("getDateToByDateFrom(2033-01-17)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2033-01-17"), "2033-01-23"));
  it("getDateToByDateFrom(2033-01-24)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2033-01-24"), "2033-01-30"));
  it("getDateToByDateFrom(2033-01-31)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2033-01-31"), "2033-02-06"));
  it("getDateToByDateFrom(2034-01-02)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2034-01-02"), "2034-01-08"));
  it("getDateToByDateFrom(2034-01-09)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2034-01-09"), "2034-01-15"));
  it("getDateToByDateFrom(2034-01-16)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2034-01-16"), "2034-01-22"));
  it("getDateToByDateFrom(2034-01-23)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2034-01-23"), "2034-01-29"));
  it("getDateToByDateFrom(2034-01-30)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2034-01-30"), "2034-02-05"));
  it("getDateToByDateFrom(2035-01-01)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2035-01-01"), "2035-01-14"));
  it("getDateToByDateFrom(2035-01-08)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2035-01-08"), "2035-01-21"));
  it("getDateToByDateFrom(2035-01-15)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2035-01-15"), "2035-01-28"));
  it("getDateToByDateFrom(2035-01-22)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2035-01-22"), "2035-01-28"));
  it("getDateToByDateFrom(2035-01-29)", { skip: true }, async (t) => t.assert.strictEqual(await getDateToByDateFrom("2035-01-29"), "2035-02-04"));
});
